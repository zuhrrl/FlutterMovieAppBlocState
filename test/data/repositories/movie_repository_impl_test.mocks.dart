// Mocks generated by Mockito 5.4.1 from annotations
// in ditonton/test/data/repositories/movie_repository_impl_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:ditonton/data/datasources/watchlist_data_source.dart' as _i2;
import 'package:ditonton/data/models/tv_table.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [WatchlistDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistDataSource extends _i1.Mock
    implements _i2.WatchlistDataSource {
  MockWatchlistDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> insertWatchlist(
    dynamic item,
    String? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [
            item,
            type,
          ],
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
  @override
  _i3.Future<String> removeWatchlist(
    dynamic item,
    String? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [
            item,
            type,
          ],
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
  @override
  _i3.Future<_i4.TvTable?> getWatchlistById(
    int? id,
    String? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistById,
          [
            id,
            type,
          ],
        ),
        returnValue: _i3.Future<_i4.TvTable?>.value(),
      ) as _i3.Future<_i4.TvTable?>);
  @override
  _i3.Future<List<_i4.TvTable>> getWatchlist() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlist,
          [],
        ),
        returnValue: _i3.Future<List<_i4.TvTable>>.value(<_i4.TvTable>[]),
      ) as _i3.Future<List<_i4.TvTable>>);
}
